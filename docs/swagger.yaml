basePath: /api/v1
definitions:
  schemas.ClientLogin:
    properties:
      email:
        example: josiel.jcc@hotmail.com
        type: string
      password:
        example: "123456"
        type: string
    type: object
  schemas.ClientLoginResponse:
    properties:
      email:
        type: string
      name:
        type: string
      role:
        type: string
      token:
        type: string
    type: object
  schemas.ClientRegister:
    properties:
      email:
        example: josiel.jcc@hotmail.com
        type: string
      name:
        example: Josiel
        type: string
      password:
        example: "123456"
        type: string
      phone:
        example: (11) 99999-9999
        type: string
    type: object
  schemas.ClientResponse:
    properties:
      address:
        type: string
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      phone:
        type: string
    type: object
  schemas.EquipmentRegister:
    properties:
      description:
        type: string
      model:
        type: string
      name:
        type: string
      serialNumber:
        type: string
    type: object
  schemas.EquipmentResponse:
    properties:
      description:
        type: string
      id:
        type: integer
      model:
        type: string
      name:
        type: string
      serialNumber:
        type: string
    type: object
  schemas.PartCreate:
    properties:
      description:
        type: string
      name:
        type: string
      price:
        type: number
      quantity:
        type: integer
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: Esta é a API para controle de ordens de serviço em uma assistência
    de manutenção de computadores.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: API de Controle de Ordens de Serviço
  version: "1.0"
paths:
  /client:
    get:
      consumes:
      - application/json
      description: Get all clients
      parameters:
      - description: Bearer Authorization
        in: header
        name: authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/schemas.ClientResponse'
            type: array
      summary: Get all clients
      tags:
      - Client
    post:
      consumes:
      - application/json
      description: Create a client
      parameters:
      - description: Bearer Authorization
        in: header
        name: authorization
        required: true
        type: string
      - description: Client
        in: body
        name: client
        required: true
        schema:
          $ref: '#/definitions/schemas.ClientRegister'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.ClientResponse'
      summary: Create a client
      tags:
      - Client
  /client/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a client
      parameters:
      - description: Bearer Authorization
        in: header
        name: authorization
        required: true
        type: string
      - description: Client ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.ClientResponse'
      summary: Delete a client
      tags:
      - Client
    get:
      consumes:
      - application/json
      description: Get a client by id
      parameters:
      - description: Bearer Authorization
        in: header
        name: authorization
        required: true
        type: string
      - description: Client ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.ClientResponse'
      summary: Get a client by id
      tags:
      - Client
  /equipment:
    get:
      consumes:
      - application/json
      description: Get all equipments
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/schemas.EquipmentResponse'
            type: array
      summary: Get all equipments
      tags:
      - Equipment
    post:
      consumes:
      - application/json
      description: Create a equipment
      parameters:
      - description: Equipment
        in: body
        name: equipment
        required: true
        schema:
          $ref: '#/definitions/schemas.EquipmentRegister'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.EquipmentResponse'
      summary: Create a equipment
      tags:
      - Equipment
  /equipment/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a equipment
      parameters:
      - description: Equipment ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.EquipmentResponse'
      summary: Delete a equipment
      tags:
      - Equipment
    get:
      consumes:
      - application/json
      description: Get a equipment by id
      parameters:
      - description: Bearer Authorization
        in: header
        name: authorization
        required: true
        type: string
      - description: Equipment ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.EquipmentResponse'
      summary: Get a equipment by id
      tags:
      - Equipment
    put:
      consumes:
      - application/json
      description: Update a equipment
      parameters:
      - description: Equipment ID
        in: path
        name: id
        required: true
        type: string
      - description: Equipment
        in: body
        name: equipment
        required: true
        schema:
          $ref: '#/definitions/schemas.EquipmentRegister'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.EquipmentResponse'
      summary: Update a equipment
      tags:
      - Equipment
  /login:
    post:
      consumes:
      - application/json
      description: Login
      parameters:
      - description: Client Login
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/schemas.ClientLogin'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.ClientLoginResponse'
      summary: Login
      tags:
      - Login
  /orders:
    get:
      consumes:
      - application/json
      description: Get Orders
      produces:
      - application/json
      responses: {}
      summary: Get Orders
      tags:
      - Order
    post:
      consumes:
      - application/json
      description: Create Order
      produces:
      - application/json
      responses: {}
      summary: Create Order
      tags:
      - Order
  /orders/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Order
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: Delete Order
      tags:
      - Order
    get:
      consumes:
      - application/json
      description: Get Order
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      - description: Bearer Authorization
        in: header
        name: authorization
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: Get Order
      tags:
      - Order
    put:
      consumes:
      - application/json
      description: Update Order
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: Update Order
      tags:
      - Order
  /part:
    get:
      consumes:
      - application/json
      description: Get Parts
      produces:
      - application/json
      responses: {}
      summary: Get Parts
      tags:
      - Part
    post:
      consumes:
      - application/json
      description: Create Part
      parameters:
      - description: Part
        in: body
        name: part
        required: true
        schema:
          $ref: '#/definitions/schemas.PartCreate'
      - description: Bearer Authorization
        in: header
        name: authorization
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: Create Part
      tags:
      - Part
  /part/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Part
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: Delete Part
      tags:
      - Part
    get:
      consumes:
      - application/json
      description: Get Part
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: Get Part
      tags:
      - Part
    put:
      consumes:
      - application/json
      description: Update Part
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: Update Part
      tags:
      - Part
  /register/technician:
    post:
      consumes:
      - application/json
      description: Create Technician
      produces:
      - application/json
      responses: {}
      summary: Create Technician
      tags:
      - Technician
  /services:
    get:
      consumes:
      - application/json
      description: Get Services
      produces:
      - application/json
      responses: {}
      summary: Get Services
      tags:
      - Service
    post:
      consumes:
      - application/json
      description: Create Service
      produces:
      - application/json
      responses: {}
      summary: Create Service
      tags:
      - Service
  /services/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Service
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: Delete Service
      tags:
      - Service
    get:
      consumes:
      - application/json
      description: Get Service
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: Get Service
      tags:
      - Service
    put:
      consumes:
      - application/json
      description: Update Service
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: Update Service
      tags:
      - Service
  /technicians:
    get:
      consumes:
      - application/json
      description: Get Technicians
      produces:
      - application/json
      responses: {}
      summary: Get Technicians
      tags:
      - Technician
  /technicians/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Technician
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: Delete Technician
      tags:
      - Technician
    get:
      consumes:
      - application/json
      description: Get Technician
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: Get Technician
      tags:
      - Technician
    put:
      consumes:
      - application/json
      description: Update Technician
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: Update Technician
      tags:
      - Technician
swagger: "2.0"
